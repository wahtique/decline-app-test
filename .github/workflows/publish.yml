name: Build and publish

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [published]

env: 
  project_name: decline-app-test

jobs:

  test:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v13
      - run: git fetch --tags || true
      - run: sbt test
        shell: bash

  unix:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, ubuntu-latest]
        include:
          - os: macOS-latest
            uploaded_filename: ${{ env.project_name }}-x86_64-apple-darwin
            local_path: target/native-image/${{ env.project_name }}
          - os: ubuntu-latest
            uploaded_filename: ${{ env.project_name }}-x86_64-pc-linux
            local_path: target/native-image/${{ env.project_name }}
    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v13
      - run: git fetch --tags || true
      - name: Setup native-image
        run: sbt nativeImageCommand
        shell: bash
      - name: Build reflection metadata
        run: sbt nativeImageRunAgent
        shell: bash
      - name: Build native image
        run: sbt nativeImage
        shell: bash
      - uses: actions/upload-artifact@v2
        with:
          path: ${{ matrix.local_path }}
          name: ${{ matrix.uploaded_filename }}
      - name: Upload release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ matrix.local_path }}
          asset_name: ${{ matrix.uploaded_filename }}
          asset_content_type: application/zip

  windows:
    needs: test
    runs-on: windows-latest
    env:
      uploaded_filename: ${{ env.project_name }}-x86_64-pc-win32.exe
      local_path: D:\a\${{ env.project_name }}\${{ env.project_name }}\target\native-image\${{ env.project_name }}
    steps: 
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v13
      - run: git fetch --tags || true
      - name: Setup windows working dir
        shell: cmd
        run: >-
          "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      - name: Setup native-image
        run: sbt nativeImageCommand
        shell: cmd
      - name: Build reflection metadata
        run: sbt nativeImageRunAgent
        shell: cmd
      - name: Build native image
        run: sbt nativeImage
        shell: cmd
      - uses: actions/upload-artifact@v2
        with:
          path: ${{ env.local_path }}
          name: ${{ env.uploaded_filename }}
      - name: Upload release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.local_path }}
          asset_name: ${{ env.uploaded_filename }}
          asset_content_type: application/zip
      


